name: Python Greetings Delivery Pipeline

on:
  push:
    branches:
      - main

jobs:
  install-pip-deps:
    name: Install Python Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Delivery Pipeline Definition
        uses: actions/checkout@v3.5.2

      - name: Checkout Python Greetings Repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
      
      - name: Install pip dependencies
        run: |
          cd python-greetings
          pip3 install -r requirements.txt

  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Delivery Pipeline Definition
        uses: actions/checkout@v3.5.2

      - name: Checkout Course JS API Framework Repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/course-js-api-framework
          path: course-js-api-framework
    
      - name: Install dependencies
        run: |
          cd course-js-api-framework
          npm install

  deploy-to-environment:
    name: Deploy to Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Delivery Pipeline Definition
        uses: actions/checkout@v3.5.2

      - name: Checkout Python Greetings Repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/python-greetings
          path: python-greetings

  deploy-to-dev:
    name: Deploy to Development Environment
    needs: [install-pip-deps, run-tests]
    steps:
      - name: Stop existing service in Development Environment
        run: |
          echo "Stopping existing service in Development Environment.."
          pm2 delete greetings-app-dev || true
          exit /b 0

      - name: Deploy to Development Environment
        run: |
          echo "Deploying to Development Environment.."
          cd python-greetings
          pm2 start app.py --name greetings-app-dev -- --port 7001
        working-directory: python-greetings

  tests-on-dev:
    name: Run Tests on Development Environment
    needs: deploy-to-dev
    steps:
      - name: Run tests on development environment
        run: |
          echo "Running tests on development environment.."
          npm run greetings greetings_dev
        working-directory: course-js-api-framework

  deploy-to-staging:
    name: Deploy to Staging Environment
    needs: [deploy-to-dev, tests-on-dev]
    steps:
      - name: Stop existing service in Staging Environment
        run: |
          echo "Stopping existing service in Staging Environment.."
          pm2 delete greetings-app-staging || true
          exit /b 0

      - name: Deploy to Staging Environment
        run: |
          echo "Deploying to Staging Environment.."
          cd python-greetings
          pm2 start app.py --name greetings-app-staging -- --port 7002
        working-directory: python-greetings

  tests-on-staging:
    name: Run Tests on Staging Environment
    needs: deploy-to-staging
    steps:
      - name: Run tests on staging environment
        run: |
          echo "Running tests on staging environment.."
          npm run greetings greetings_staging
        working-directory: course-js-api-framework

  deploy-to-preprod:
    name: Deploy to Pre-production Environment
    needs: [deploy-to-staging, tests-on-staging]
    steps:
      - name: Stop existing service in Pre-production Environment
        run: |
          echo "Stopping existing service in Pre-production Environment.."
          pm2 delete greetings-app-preprod || true
          exit /b 0

      - name: Deploy to Pre-production Environment
        run: |
          echo "Deploying to Pre-production Environment.."
          cd python-greetings
          pm2 start app.py --name greetings-app-preprod -- --port 7003
        working-directory: python-greetings

  tests-on-preprod:
    name: Run Tests on Pre-production Environment
    needs: deploy-to-preprod
    steps:
      - name: Run tests on pre-production environment
        run: |
          echo "Running tests on pre-production environment.."
          npm run greetings greetings_preprod
        working-directory: course-js-api-framework

  deploy-to-prod:
    name: Deploy to Production Environment
    needs: [deploy-to-preprod, tests-on-preprod]
    steps:
      - name: Stop existing service in Production Environment
        run: |
          echo "Stopping existing service in Production Environment.."
          pm2 delete greetings-app-prod || true
          exit /b 0

      - name: Deploy to Production Environment
        run: |
          echo "Deploying to Production Environment.."
          cd python-greetings
          pm2 start app.py --name greetings-app-prod -- --port 7004
        working-directory: python-greetings

  tests-on-prod:
    name: Run Tests on Production Environment
    needs: deploy-to-prod
    steps:
      - name: Run tests on production environment
        run: |
          echo "Running tests on production environment.."
          npm run greetings greetings_prod
        working-directory: course-js-api-framework
